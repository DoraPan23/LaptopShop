@model LaptopShop.Models.Order
@{
    ViewBag.Title = "Edit";
    //Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


<h2>Edit</h2>


@using (Html.BeginForm("Update", "OrderMangement", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total_Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total_Price, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.Total_Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_Id, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p>Trạng thái</p>
            @{
                String[] status = new String[] {
                "",
                "Tiếp nhận",
                "Đang giao",
                "Hoàn thành",
                "Đã hủy",
            };
                if (ViewBag.Status == 4)
                {
                    <select name="Status" id="Status" disabled>
                        @for (var i = 1; i < 5; i++)
                        {
                            if (i == ViewBag.Status)
                            {
                                <option selected value="@i">@status[i]</option>
                            }
                            else
                            {
                                <option value="@i">@status[i]</option>
                            }
                        }
                    </select>
                }
                else
                {
        <select name="Status" id="Status">
            @for (var i = 1; i < 5; i++)
            {
                if (i == ViewBag.Status)
                {
                    <option selected value="@i">@status[i]</option>
                }
                else
                {
                    if (i == 4)
                    {
                        <option disabled value="@i">@status[i]</option>
                    }
                    else
                    {
                        <option value="@i">@status[i]</option>
                    }

                }
            }
        </select>
                }

            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


