@model LaptopShop.Models.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>AddProduct</h2>

@using (Html.BeginForm("Create", "ProductManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Product name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Catalog", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Catalog", (IEnumerable<SelectListItem>)ViewBag.CategoryList, new { onchange="displayBrand(this.value)", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Catalog_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>


    <label for="file">Upload Image:</label>
    <input type="file" name="file" id="file" /><br><br>

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="brandList" hidden>
        @Html.LabelFor(model => model.Brand_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Brand", (IEnumerable<SelectListItem>)ViewBag.BrandList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Brand_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input onclick="return validate()" type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function displayBrand(value) {
        let p = document.getElementById('brandList');
        if (value == 6) {
            p.removeAttribute("hidden");
        }
        else {
            p.setAttribute("hidden",'');
        }
    }

    function validate() {
        var checkProductName = document.getElementById("Product_Name").value;
        var checkAmount = document.getElementById("Amount").value;
        var checkPrice = document.getElementById("Price").value;
        var checkDiscount = document.getElementById("Discount").value;
        var checkDetail = document.getElementById("Detail").value;
        if (checkProductName == "") {
            alert("Please type product name");
            document.getElementById("Product_Name").focus();
            return false;
        }
        if (checkAmount == "") {
            alert("Please type Amount");
            document.getElementById("Amount").focus();
            return false;
        }
        if (checkPrice == "") {
            alert("Please type Price");
            document.getElementById("Price").focus();
            return false;
        }
        if (checkDiscount == "") {
            alert("Please type Discount");
            document.getElementById("Discount").focus();
            return false;
        }
        if (checkDetail == "") {
            alert("Please type Detail");
            document.getElementById("Detail").focus();
            return false;
        }
        return true;
    }
</script>