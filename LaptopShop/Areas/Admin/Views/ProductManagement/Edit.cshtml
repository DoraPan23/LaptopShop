@model LaptopShop.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "ProductManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.TextBoxFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="listCatalog">
        @Html.LabelFor(model => model.Catalog_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Catalog", (IEnumerable<SelectListItem>)ViewBag.CategoryList, new { onchange = "displayBrand(this.value)", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Catalog_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <label id="fileImag" for="file">Upload Image:</label>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        @Html.ValidationMessageFor(model => model.Image, "", new {  @class = "text-danger"})
        <input type="file" name="file" id="file" /><br><br>
    </div>
    

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="brandList">
        @Html.LabelFor(model => model.Brand_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Brand", (IEnumerable<SelectListItem>)ViewBag.BrandList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Brand_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    //var giatri = document.getElementById("listCatalog").value;
    //alert("giatri" + giatri);
    //document.getElementById("listCatalog").onload = function () { displayBrand(giatri) };

    function displayBrand(value) {
        alert(value);
        let p = document.getElementById('brandList');
        if (value == 6) {
            alert("zo lap top1");
            p.removeAttribute("hidden");
        }
        else {
            alert("k zo1");
            p.setAttribute("hidden",'');
        }
    }
</script>